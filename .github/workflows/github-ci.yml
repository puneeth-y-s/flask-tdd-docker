name: Github CI Workflow

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:stable
        options: --privileged
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io

      - name: Pull Docker image
        run: |
          docker pull ghcr.io/${{ github.repository }}:latest || true

      - name: Build Docker image
        run: |
          docker build \
            --cache-from ghcr.io/${{ github.repository }}:latest \
            --tag ghcr.io/${{ github.repository }}:latest \
            --file ./Dockerfile.prod \
            .

      - name: Push Docker image to GitHub Container Registry
        run: |
          docker push ghcr.io/${{ github.repository }}:latest

  # test:
  #   runs-on: ubuntu-latest
  #   services:
  #     postgres:
  #       image: postgres:latest
  #       env:
  #         POSTGRES_DB: users
  #         POSTGRES_USER: runner
  #         POSTGRES_PASSWORD: runner
  #       ports:
  #         - 5432:5432
  #       options: --health-cmd="pg_isready -U runner -d users" --health-interval=10s --health-timeout=5s --health-retries=3
    
  #   env:
  #     DATABASE_URL: postgresql://runner:runner@localhost:5432/users
  #     DATABASE_TEST_URL: postgresql://runner:runner@localhost:5432/users

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.12'

  #     - name: Install dependencies
  #       run: |
  #         pip install -r requirements.txt

  #     - name: Run tests
  #       run: |
  #         python -m pytest "src/tests" -p no:warnings

  #     - name: Run flake8
  #       run: |
  #         python -m flake8 src

  #     - name: Run black check
  #       run: |
  #         python -m black src --check

  #     - name: Run isort check
  #       run: |
  #         python -m isort src --check-only

  test:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository }}:latest  # Run the tests inside the container with PostgreSQL
      options: --privileged  # Enable privileged mode to allow PostgreSQL to run inside the container

    env:
      DATABASE_URL: postgresql://runner:runner@localhost:5432/users  # Connect to PostgreSQL inside the container
      DATABASE_TEST_URL: postgresql://runner:runner@localhost:5432/users

    steps:
      - name: Print working directory
        run: |
          pwd
          ls -la

      - name: Fix permissions
        run: |
          chmod -R 755 src/tests

      - name: Run tests
        run: |
          python -m pytest "src/tests" -p no:warnings

      - name: Run flake8
        run: |
          python -m flake8 src

      - name: Run black check
        run: |
          python -m black src --check

      - name: Run isort check
        run: |
          python -m isort src --check-only
